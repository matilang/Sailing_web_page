{"ast":null,"code":"var _jsxFileName = \"C:\\\\c2k\\\\git-master-beng\\\\sailing-page\\\\react\\\\src\\\\components\\\\Question.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QuestionItem from './QuestionItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  questions\n}) => {\n  _s();\n  const [activeIndices, setActiveIndices] = useState([]);\n  const handleToggleActive = index => {\n    setActiveIndices(prevIndices => {\n      if (prevIndices.includes(index)) {\n        return prevIndices.filter(i => i !== index);\n      } else {\n        return [...prevIndices, index];\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Strefa najcz\\u0119\\u015Bciej zadawanych pyta\\u0144\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), questions.map((q, index) => /*#__PURE__*/_jsxDEV(QuestionItem, {\n      question: q.question,\n      answer: q.answer,\n      isActive: activeIndices.includes(index),\n      onToggleActive: () => handleToggleActive(index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"hLh4j2muM6N6XPTlobx/rgR9oko=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","QuestionItem","jsxDEV","_jsxDEV","Question","questions","_s","activeIndices","setActiveIndices","handleToggleActive","index","prevIndices","includes","filter","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","q","question","answer","isActive","onToggleActive","_c","$RefreshReg$"],"sources":["C:/c2k/git-master-beng/sailing-page/react/src/components/Question.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport QuestionItem from './QuestionItem';\r\n\r\nconst Question = ({ questions }) => {\r\n  const [activeIndices, setActiveIndices] = useState([]);\r\n\r\n  const handleToggleActive = (index) => {\r\n    setActiveIndices((prevIndices) => {\r\n      if (prevIndices.includes(index)) {\r\n        return prevIndices.filter((i) => i !== index);\r\n      } else {\r\n        return [...prevIndices, index];\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"text\">\r\n      <h2>Strefa najczęściej zadawanych pytań</h2>\r\n      {questions.map((q, index) => (\r\n        <QuestionItem\r\n          key={index}\r\n          question={q.question}\r\n          answer={q.answer}\r\n          isActive={activeIndices.includes(index)}\r\n          onToggleActive={() => handleToggleActive(index)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,kBAAkB,GAAIC,KAAK,IAAK;IACpCF,gBAAgB,CAAEG,WAAW,IAAK;MAChC,IAAIA,WAAW,CAACC,QAAQ,CAACF,KAAK,CAAC,EAAE;QAC/B,OAAOC,WAAW,CAACE,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,KAAK,CAAC;MAC/C,CAAC,MAAM;QACL,OAAO,CAAC,GAAGC,WAAW,EAAED,KAAK,CAAC;MAChC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEP,OAAA;IAAKY,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBb,OAAA;MAAAa,QAAA,EAAI;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3Cf,SAAS,CAACgB,GAAG,CAAC,CAACC,CAAC,EAAEZ,KAAK,kBACtBP,OAAA,CAACF,YAAY;MAEXsB,QAAQ,EAAED,CAAC,CAACC,QAAS;MACrBC,MAAM,EAAEF,CAAC,CAACE,MAAO;MACjBC,QAAQ,EAAElB,aAAa,CAACK,QAAQ,CAACF,KAAK,CAAE;MACxCgB,cAAc,EAAEA,CAAA,KAAMjB,kBAAkB,CAACC,KAAK;IAAE,GAJ3CA,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CA3BIF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA6Bd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}